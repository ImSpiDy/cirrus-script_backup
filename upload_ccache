#!/bin/bash

cd /tmp
. /tmp/ci/function && check_build_no

# disable ccache upload if rom compilation was successful
if [ ! -e out/target/product/$device_codename/*$device_codename*2022*zip ]; then

SECONDS=0

# compress in with pigz in a single zip.
com ccache 1 # Compression level 1, its enough

mv *.tar.gz /tmp/$rom_name

echo "• Uploading Cache On GitLab •"
cd /tmp/$rom_name
rm -rf README.md
git add -f -A .
git commit -m "$rom_name: save cache | Build No: $build_no"
git push https://oauth2:$gitlab_token@gitlab.com/$gitlab_username/$gitlab_reponame.git -f # force push let's goooooo
tg "Cache was Uploaded Successfully!
Time Took: $(($SECONDS / 60)) minute(s) and $(($SECONDS % 60)) second(s).
Status: $progress | Build No: $build_no"

# lets compile again as rom isn't ready yet
git clone $github_repo $rom_name && cd $rom_name
git commit -sm "SH*T, HERE WE GO AGAIN | $new_build_no
* Empty Commit To Re-Start The Build" --allow-empty
git push -f
tg "Started New Build as Rom isn't Compiled
Status: https://cirrus-ci.com/ | Build No: $new_build_no"

else

git clone $github_repo $rom && cd $rom
git reset --hard HEAD~$build_no
git push # new change made by you will get removed if force pushed so let's just reset when commits are empty

fi

# clean storage
rm -rf /tmp/*

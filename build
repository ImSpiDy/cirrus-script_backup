#!/bin/bash
cd /tmp/rom # Depends on where source got synced
. /tmp/ci/function

# Normal build steps
. build/envsetup.sh
lunch $lunch
export CCACHE_DIR=/tmp/ccache
export CCACHE_EXEC=$(which ccache)
export USE_CCACHE=1
ccache -M 15G
ccache -o compression=true
ccache -z

# check how much time sync took
sync_time

check_build_no
new_build_no=3 # compile full rom plox
case "$new_build_no" in
		 1) # 20 mins 
		 sleeps=$((105 - $sync_time))m
		 ;;
		 2) # 20 mins
		 sleeps=$((100 - $sync_time))m
		 ;;
		 *) # 10 mins 
		 sleeps=$((115 - $sync_time))m
esac

# compile plox
case "$new_build_no" in
		 1|2) # lets collect system cache before making full rom
		 make systemimage -j$(nproc --all) &
		 sleep $sleeps
		 build_type="SystemImg"
		 ;;
		 *) # Lets Make Full Rom
		 bash -c "$compile_plox" #&
		 #sleep $sleeps
		 build_type=ROM
esac
#kill %1
tg "Stop Compiling $build_type To Collect Cache
Status: $progress | Build No: $build_no"

if [ -e out/target/product/$device_codename/*$device_codename*2022*zip ]; then

cd out/target/product/$device
send_zip=$(upload "*$device*2022*zip")
tg $id "Build Succeed!
$send_zip"

fi

ccache -s # Let's print ccache statistics finally
